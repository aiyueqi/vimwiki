= Executor框架 =

== Executor执行的任务的生命周期 ==
1. 创建
2. 提交
3. 开始
4. 完成

== 线程池 ==
1. newFixedThreadPool
2. newCachedThreadPool
3. newSingleThreadExecutor
4. newScheduledThreadPool

== Future ==
Future表示一个任务的生命周期 
任务的生命周期只能前进,不能后退，当某个任务完成后，它就永远停留在“完成”状态上

=== get方法 ===
get方法的行为取决于任务的状态：
1. 尚未开始
2. 正在运行
3. 已完成
如果任务已经完成，那么get会立即返回或抛出一个Exception
如果任务未完成，那么get将阻塞并直到任务完成
如果任务抛出了异常，那么get将该异常封装为ExecutionException并重新抛出, 且可以通过getCause来获得被封装的初始异常
如果任务被取消，那么get将抛出CancellationException
