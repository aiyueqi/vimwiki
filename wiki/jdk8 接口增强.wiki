= jd8 接口增强 =
https://blog.csdn.net/sun_promise/article/details/51220518

Java 8 对接口做了进一步的增强。

- 在接口中可以添加使用 default 关键字修饰的非抽象方法。即：默认方法（或扩展方法）

- 接口里可以声明静态方法，并且可以实现。


== 默认方法 ==
Java 8 允许给接口添加一个非抽象的方法实现，只需要使用 default 关键字即可，这个特征又叫做扩展方法（也称为默认方法或虚拟扩展方法或防护方法）。在实现该接口时，该默认扩展方法在子类上可以直接使用，它的使用方式类似于抽象类中非抽象成员方法

多重继承的冲突说明：

由于同一个方法可以从不同接口引入，自然而然的会有冲突的现象，规则如下：

1）一个声明在类里面的方法优先于任何默认方法
2）优先选取最具体的实现

== equals, hashcode, toString ==
为什么不能用默认方法来重载equals，hashCode和toString？
接口不能提供对Object类的任何方法的默认实现。从接口里不能提供对equals，hashCode或toString的默认实现。因为若可以会很难确定什么时候该调用接口默认的方法。

如果一个类实现了一个方法，那总是优先于默认的实现的。一旦所有接口的实例都是Object的子类，所有接口实例都已经有对equals/hashCode/toString等方法非默认 实现。因此，一个在接口上的这些默认方法都是没用的，它也不会被编译。（简单地讲，每一个java类都是Object的子类，也都继承了它类中的equals/hashCode/toString方法，那么在类的接口上包含这些默认方法是没有意义的，它们也从来不会被编译。）
