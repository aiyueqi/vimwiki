= redis数据类型概述 =
C语言实现
key-value数据库
== string ==
字符串类型

== list ==
1.压缩列表
要求：
- 单个数据小于64byte
- 个数小于512个
优点：
- 节省内存(和数组相比，数组要求单个数据长度相同，这里不需要相同)
- 支持不同类型数据存储

2.双向循环列表
不满足以上两个条件，用此方式实现

== hash ==
1.压缩列表
要求：
- 字典中保存的key和value的大小都要小于64byte
- 键值对个数小于512个

2.散列表
- 哈希函数：MurmurHash2, 运行速度快，随机性好
- 哈希冲突：使用链表法解决
- 支持散列表动态扩容、缩容：
    - 当装载因子大于1触发扩容，扩大到2倍左右；小于0.1触发缩容，缩小到字典中数据个数的2倍左右
    - 渐进式扩容缩容策略，将数据的搬移分批进行

== set ==
1.基于有序数组
- 存储的数据都是整数
- 存储的数据不超过512个

2.基于散列表

== zset ==
1.压缩列表
- 所有元素大小小于64byte
- 元素个数小于128个

2.跳表

== 持久化 ==
1. 清除原有存储结构，只将数据存储到磁盘：
redis使用此方法
缺点：从磁盘加载到内存会比较耗时

2. 保存原来的存储格式
