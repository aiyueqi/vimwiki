= session与token =
HTTP是无状态协议，为了存储用户登录信息，需要用到session和token技术

== session and cookie ==
session即会话，服务端为了区分不同的客户端而生成的身份标识。
服务器使用session把用户的信息临时保存在了服务器上, 客户端使用cookie来存储这个身份标识。

客户端第一次向服务端发起请求时，服务端会生成session并存储下来，客户端接到服务端返回的请求时，便将session set到header的cookie中。当客户端再次像服务端发送请求时，头部会带上刚刚set过的cookie，用来标志身份

== session的不足 ==
session 存储在某一台服务器上，而对于分布式系统，因为反向代理和负载均衡的存在，请求可能会打到其他的实例上，那么session会丢失。

== token ==
客户端第一次向服务端发起请求时，服务端使用一些算法对密钥和数据做一个签名生成token，不存储token，返回给客户端。客户端会将token存储下来，再次请求时，服务端会再次计算生成签名与客户端传来的token是否一致，一致则校验通过。

使用token避免了分布式多台实例无法存储session的问题

